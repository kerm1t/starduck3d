# 2018-09-16 Cmake projekt erstellt, comiliert und linkt jetzt.
# aber das Problem: es ist ein Windows executable
# ... etwas später: Problem gelöst .rc musste hinzugefügt werden, das seinerseits .ico lädt

cmake_minimum_required (VERSION 3.6)

project (starduck)

set(glew "glew-2.1.0")

##find_package(GLEW REQUIRED)
##if (GLEW_FOUND)
##    include_directories(${GLEW_INCLUDE_DIRS})
##    link_libraries(${GLEW_LIBRARIES})
##endif()

add_compile_definitions(IMGUI_IMPL_OPENGL_LOADER_GLEW)
 
link_directories(lib/${glew}/lib/Debug/Win32)

#target_include_directories(starduck PRIVATE
include_directories(src/common
    src/engine
    lib/${glew}/include
    lib/glm/glm
    lib/imgui
    lib/imgui/examples)

#set_source_files_properties(src/nebulus.ico src/small.ico src/nebulus.rc PROPERTIES LANGUAGE RC)
#set_source_files_properties(src/nebulus.rc PROPERTIES LANGUAGE RC)

file(GLOB_RECURSE SRC_IMGUI
    lib/imgui/imgui.cpp
    lib/imgui/imgui_draw.cpp
    lib/imgui/imgui_widgets.cpp
    lib/imgui/examples/imgui_impl_win32.cpp
    lib/imgui/examples/imgui_impl_opengl3.cpp)
	
add_executable(starduck WIN32
    src/game/virtualroad/virtualroad.cpp
    # created previously
    src/game/virtualroad/resource.h
    # now the engine
    src/common/Timer.cpp
    src/engine/camera.hpp
    src/engine/img_bitmap.hpp
    src/engine/img_DDS.hpp
    src/engine/mdl_OBJ.hpp
    src/engine/obj.hpp
    src/engine/obj_curbstone.hpp
    src/engine/obj_groundplane.hpp
    src/engine/obj_guardrail.hpp
    src/engine/obj_moving.hpp
    src/engine/obj_scene.hpp
    src/engine/obj_trafficsign.hpp
    src/engine/obj_tunnel.hpp
    src/engine/proj.cpp
    src/engine/proj_m3uloader.hpp
    src/engine/proj_render.cpp
    src/engine/proj_scene.cpp
    src/engine/proj_scenebuilder.hpp
    src/engine/proj_sceneloader.cpp
    src/engine/rnd_fbo.hpp
    src/engine/rnd_shaderman.hpp
    src/nebulus.rc
    ${SRC_IMGUI})

source_group("imgui" FILES ${SRC_IMGUI})

target_link_libraries(starduck OpenGL32.lib GLu32.lib glew32sd)

#find_library(GLEW_LIB glew HINTS lib/${glew}/lib/Debug/Win32/glew32sd)
#target_link_libraries(starduck PUBLIC ${GLEW_LIB})

#add_custom_command(TARGET starduck POST_BUILD
#    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:mylibrary> ${targetfile}
#)
